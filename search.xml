<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Explain执行计划</title>
    <url>/2025/03/24/Explain%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<p><code>salaries表</code>的DDL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> `salaries` (</span><br><span class="line">  `emp_no` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `salary` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `from_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `to_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`emp_no`,`from_date`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `salaries_ibfk_1` <span class="keyword">FOREIGN KEY</span> (`emp_no`) <span class="keyword">REFERENCES</span> `employees` (`emp_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure>

<p><code>salaries表</code>的数据截图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503241707667.png" alt="image-20250324170728887"></p>
<p><strong>id列：</strong> </p>
<p>表示执行顺序，值越大则优先级越高；值相同则从上而下执行 </p>
<p><strong>select_type列</strong>常见的有：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">simple：表示不需要union操作或者不包含子查询的简单select查询。有连接查询时，外层的查询为simple，且只有一个</span><br><span class="line">primary：一个需要union操作或者含有子查询的select，位于最外层的单位查询的select<span class="emphasis">_type即为primary。 且只有一个</span></span><br><span class="line"><span class="emphasis">union：union连接的两个select查询，第一个查询是dervied派生表，除了第一个表外，第二个以后的表 select_</span>type都是union</span><br><span class="line">dependent union：与union一样，出现在union 或union all语句中，但是这个查询要受到外部查询的影响</span><br><span class="line">union result：包含union的结果集，在union和union all语句中,因为它不需要参与查询，所以id字段为null</span><br><span class="line">subquery：除了from字句中包含的子查询外，其他地方出现的子查询都可能是subquery</span><br><span class="line">dependent subquery：与dependent union类似，表示这个subquery的查询要受到外部表查询的影响</span><br><span class="line">derived：from字句中出现的子查询，也叫做派生表，其他数据库中可能叫做内联视图或嵌select</span><br></pre></td></tr></table></figure>

<p><strong>table列</strong><br>显示的查询表名，如果查询使用了别名，那么这里显示的是别名，如果不涉及对数据表的操作，那么这显示为null，如果显示为尖括号括起来的<code>&lt;derived N&gt;</code>就表示这个是临时表,后边的N就是执行计划 中的id，表示结果来自于这个查询产生。如果是尖括号括起来&lt;union M,N&gt;，与<code>&lt;derived N&gt;</code>类似， 也是一个临时表，表示这个结果来自于union查询的id为M,N的结果集</p>
<p><strong>Type列</strong><br>：表示访问类型，性能从低到高依次是：ALL-&gt;index-&gt;range-&gt;ref-&gt;eq_ref-&gt;const-&gt;system</p>
<ul>
<li>ALL：Full Table Scan， MySQL将遍历全表以找到匹配的行</li>
<li><strong>index：Full Index Scan(覆盖索引)index与ALL区别为index类型只遍历索引树，例如count（*）</strong></li>
<li><strong>range</strong>：索引范围扫描**，对索引的扫描开始于某一点，返回匹配值域的行，<strong>常见于between、and ,in, &lt;、 &gt;等的查询</strong></li>
<li>unique_subquery：用于where中的in形式子查询，子查询返回不重复值唯一值</li>
<li>index_subquery：用于in形式子查询使用到了辅助索引或者in常数列表，子查询可能返回重复值，可以使用索引将子查询去重</li>
<li>**ref：非唯一性索引扫描，等值匹配，可能有多行命中。**返回匹配某个单独值的所有行。常见于使用非唯一索引和唯一索引的非唯一前缀进行的查找</li>
<li>**eq_ref：唯一性索引扫描，PK或者unique上的join查询。**对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描的多表链接操作中</li>
<li>**system最快：不进行磁盘IO。**当MySQL对查询某部分进行优化，并转换为一个常量时，使用这些类型访问。如将主键置于where列表中，MySQL就能将该 查询转换为一个常量。 System为表中只有一行数据或者是空表，且只能用于myisam和memory表。如果是Innodb引擎表， type列在这个情况通常都是all或者index</li>
<li><strong>const:使用唯一索引或者主键上的等值查询</strong>，返回记录一定是1行记录的等值where条件时，通常type是const。其他数据库也叫做唯一索引扫描</li>
<li>NULL：MySQL在优化过程中分解语句，执行时甚至不用访问表或索引</li>
</ul>
<p><strong>possible_keys列</strong><br>表示MySQL能使用哪个索引在表中找到行，查询涉及到的字段上若存在索引，则该索引将被列出，但<code>不一定被查询使用</code></p>
<p> <strong>Key列</strong>：<br>表示<code>MySQL在查询中实际使用的索引</code>，若没有使用索引，显示为NULL </p>
<p><strong>key_len列</strong>：<br>表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度 </p>
<p><strong>Ref列</strong>：<br>如果是使用的常数等值查询，这里会显示const，如果是连接查询，被驱动表的执行计划这里会显示驱动表的关联字段，如果是条件使用了表达式或者函数，或者条件列发生了内部隐式转换，这里可能显示为func</p>
<p><strong>Rows列</strong>：<br>表示MySQL根据表统计信息及索引选用情况，<code>估算的找到所需的记录所需要读取的行数</code>，值越大性能越差 </p>
<p><strong>Extra列</strong>：</p>
<p>包含不适合在其他列中显示但<code>十分重要的额外信息</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Using index：该值表示相应的select操作中使用了覆盖索引（Covering Index）</span><br><span class="line">Using where：表示MySQL服务器在存储引擎收到(使用索引)记录后进行“后过滤”</span><br><span class="line">Using temporary：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询</span><br><span class="line">Using filesort： MySQL中无法利用索引完成的排序操作称为“文件排序”，常见于order by和group by语句中</span><br></pre></td></tr></table></figure>

<h2 id="第一个："><a href="#第一个：" class="headerlink" title="第一个："></a>第一个：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503241709339.png" alt="image-20250324170927724"></p>
<h2 id="第二个："><a href="#第二个：" class="headerlink" title="第二个："></a>第二个：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span> <span class="keyword">AND</span> from_date <span class="operator">=</span> <span class="string">&#x27;1986-06-26&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span> <span class="keyword">AND</span> from_date <span class="operator">=</span> <span class="string">&#x27;1986-06-26&#x27;</span>;</span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503241728128.png" alt="image-20250324172801440"></p>
<h2 id="第三个："><a href="#第三个：" class="headerlink" title="第三个："></a>第三个：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> salary<span class="operator">=</span><span class="number">71963</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> salary<span class="operator">=</span><span class="number">71963</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503241731904.png" alt="image-20250324173009009"></p>
<h2 id="第四个："><a href="#第四个：" class="headerlink" title="第四个："></a>第四个：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.<span class="operator">*</span>, emp.<span class="operator">*</span> <span class="keyword">FROM</span> salaries s, employees emp <span class="keyword">WHERE</span> s.emp_no <span class="operator">=</span> emp.emp_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">on</span> s.emp_no <span class="operator">=</span> emp.emp_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">left</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">ON</span> s.emp_no <span class="operator">=</span> emp.emp_no <span class="keyword">WHERE</span> s.emp_no <span class="keyword">BETWEEN</span> <span class="number">10002</span> <span class="keyword">AND</span> <span class="number">10006</span>;</span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">left</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">ON</span> s.emp_no <span class="operator">=</span> emp.emp_no <span class="keyword">WHERE</span> s.emp_no <span class="keyword">BETWEEN</span> <span class="number">10002</span> <span class="keyword">AND</span> <span class="number">10006</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503242025770.png" alt="image-20250324202502459"></p>
<h2 id="第五个："><a href="#第五个：" class="headerlink" title="第五个："></a>第五个：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> e.emp_no, e.first_name, e.last_name, s.salary, d.dept_no, dept.dept_name <span class="keyword">FROM</span> employees e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salaries s <span class="keyword">ON</span> e.emp_no <span class="operator">=</span> s.emp_no <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept_emp d <span class="keyword">ON</span> e.emp_no <span class="operator">=</span> d.emp_no <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments dept <span class="keyword">ON</span> d.dept_no <span class="operator">=</span> dept.dept_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.emp_no, e.first_name, e.last_name, s.salary <span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> salaries s <span class="keyword">ON</span> e.emp_no <span class="operator">=</span> s.emp_no <span class="keyword">GROUP</span> <span class="keyword">BY</span> e.emp_no;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503242059734.png" alt="image-20250324205926474"></p>
<h2 id="整体测试的SQL语句："><a href="#整体测试的SQL语句：" class="headerlink" title="整体测试的SQL语句："></a>整体测试的SQL语句：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(s.salary) totalSalary <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span>;</span><br><span class="line">explain <span class="keyword">SELECT</span> <span class="built_in">SUM</span>(s.salary) totalSalary <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span> <span class="keyword">AND</span> from_date <span class="operator">=</span> <span class="string">&#x27;1986-06-26&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10001</span> <span class="keyword">AND</span> from_date <span class="operator">=</span> <span class="string">&#x27;1986-06-26&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> salary<span class="operator">=</span><span class="number">71963</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> salary<span class="operator">=</span><span class="number">71963</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="operator">*</span>, emp.<span class="operator">*</span> <span class="keyword">FROM</span> salaries s, employees emp <span class="keyword">WHERE</span> s.emp_no <span class="operator">=</span> emp.emp_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">on</span> s.emp_no <span class="operator">=</span> emp.emp_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">left</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">ON</span> s.emp_no <span class="operator">=</span> emp.emp_no <span class="keyword">WHERE</span> s.emp_no <span class="keyword">BETWEEN</span> <span class="number">10002</span> <span class="keyword">AND</span> <span class="number">10006</span>;</span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">left</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">ON</span> s.emp_no <span class="operator">=</span> emp.emp_no <span class="keyword">WHERE</span> s.emp_no <span class="keyword">BETWEEN</span> <span class="number">10002</span> <span class="keyword">AND</span> <span class="number">10006</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">left</span> <span class="keyword">JOIN</span> employees emp <span class="keyword">ON</span> s.emp_no <span class="operator">=</span> emp.emp_no <span class="keyword">WHERE</span> emp.emp_no <span class="keyword">is</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> e.emp_no, e.first_name, e.last_name, s.salary, d.dept_no, dept.dept_name <span class="keyword">FROM</span> employees e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salaries s <span class="keyword">ON</span> e.emp_no <span class="operator">=</span> s.emp_no <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept_emp d <span class="keyword">ON</span> e.emp_no <span class="operator">=</span> d.emp_no <span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments dept <span class="keyword">ON</span> d.dept_no <span class="operator">=</span> dept.dept_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.emp_no, e.first_name, e.last_name, s.salary <span class="keyword">FROM</span> employees e <span class="keyword">JOIN</span> salaries s <span class="keyword">ON</span> e.emp_no <span class="operator">=</span> s.emp_no <span class="keyword">GROUP</span> <span class="keyword">BY</span> e.emp_no;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>), s.emp_no <span class="keyword">FROM</span> salaries s <span class="keyword">GROUP</span> <span class="keyword">BY</span> s.emp_no;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10837</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries s <span class="keyword">WHERE</span> emp_no <span class="operator">=</span> <span class="number">10837</span>;</span><br><span class="line"><span class="keyword">ALTER TABLE</span> salaries <span class="keyword">ADD</span> INDEX emp_number (emp_no);</span><br></pre></td></tr></table></figure>

<h2 id="对应数据库表的DDL："><a href="#对应数据库表的DDL：" class="headerlink" title="对应数据库表的DDL："></a>对应数据库表的DDL：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> `salaries` (</span><br><span class="line">  `emp_no` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `salary` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `from_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `to_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`emp_no`,`from_date`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `salaries_ibfk_1` <span class="keyword">FOREIGN KEY</span> (`emp_no`) <span class="keyword">REFERENCES</span> `employees` (`emp_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> `dept_emp` (</span><br><span class="line">  `emp_no` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `dept_no` <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `from_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `to_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`emp_no`,`dept_no`),</span><br><span class="line">  KEY `dept_no` (`dept_no`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `dept_emp_ibfk_1` <span class="keyword">FOREIGN KEY</span> (`emp_no`) <span class="keyword">REFERENCES</span> `employees` (`emp_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `dept_emp_ibfk_2` <span class="keyword">FOREIGN KEY</span> (`dept_no`) <span class="keyword">REFERENCES</span> `departments` (`dept_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> `dept_manager` (</span><br><span class="line">  `emp_no` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `dept_no` <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `from_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `to_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`emp_no`,`dept_no`),</span><br><span class="line">  KEY `dept_no` (`dept_no`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `dept_manager_ibfk_1` <span class="keyword">FOREIGN KEY</span> (`emp_no`) <span class="keyword">REFERENCES</span> `employees` (`emp_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `dept_manager_ibfk_2` <span class="keyword">FOREIGN KEY</span> (`dept_no`) <span class="keyword">REFERENCES</span> `departments` (`dept_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> `employees` (</span><br><span class="line">  `emp_no` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `birth_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `first_name` <span class="type">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `last_name` <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `gender` enum(<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;F&#x27;</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `hire_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`emp_no`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> `titles` (</span><br><span class="line">  `emp_no` <span class="type">int</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `from_date` <span class="type">date</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `to_date` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`emp_no`,`title`,`from_date`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `titles_ibfk_1` <span class="keyword">FOREIGN KEY</span> (`emp_no`) <span class="keyword">REFERENCES</span> `employees` (`emp_no`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> `departments` (</span><br><span class="line">  `dept_no` <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  `dept_name` <span class="type">varchar</span>(<span class="number">40</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`dept_no`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `dept_name` (`dept_name`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>我的第一篇文章</title>
    <url>/2025/03/21/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>使用hexo+next搭建我的博客，并且利用github进行访问，访问地址为：<a href="https://nami404.github.io/">https://nami404.github.io/</a></p>
<p>next主题配置：<a href="https://blog.csdn.net/as480133937/article/details/100138838">https://blog.csdn.net/as480133937/article/details/100138838</a></p>
<p>发表文章教程：<a href="https://fuguigui.github.io/hexo2/">https://fuguigui.github.io/hexo2/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503212354270.png" alt="image-20250321235417442"></p>
<p>另外，配置Typora+PicGo+Github实现图床，保存博客中的图片。</p>
<p>使用到的教程：<a href="https://zhuanlan.zhihu.com/p/489236769">https://zhuanlan.zhihu.com/p/489236769</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/nami404/BlogImage@main/img/202503212358165.png" alt="image-20250321235812359"></p>
<p>注意第一个设定仓库名，是“用户名&#x2F;仓库名”，然后自定义域名按照上面教程来的进行cdn配置。</p>
]]></content>
  </entry>
</search>
